syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

package account.service;

option go_package = "api";
option (gogoproto.goproto_getters_all) = false;

message Info {
    int64 mid = 1 [(gogoproto.jsontag) = "mid"];
    string name = 2 [(gogoproto.jsontag) = "name"];
    string sex = 3 [(gogoproto.jsontag) = "sex"];
    string face = 4 [(gogoproto.jsontag) = "face"];
}

message Profile {
    int64 mid = 1 [(gogoproto.jsontag) = "mid"];
    string name = 2 [(gogoproto.jsontag) = "name"];
    string sex = 3 [(gogoproto.jsontag) = "sex"];
    string face = 4 [(gogoproto.jsontag) = "face"];
    string email = 5 [(gogoproto.jsontag) = "email"];
    string phone = 6 [(gogoproto.jsontag) = "phone"];
    string join_time = 7 [(gogoproto.jsontag) = "join_time"];
}

message MidReq {
    int64 mid = 1 [(gogoproto.moretags) = "validate:\"gt=0,required\""];
}

message InfoReply {
    Info info = 1;
}

message ProfileReply {
    Profile profile = 1;
}

service Account {
    rpc Info (MidReq) returns (InfoReply);
    rpc Profile (MidReq) returns (ProfileReply);
}